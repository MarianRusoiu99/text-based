
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  passwordHash: 'passwordHash',
  displayName: 'displayName',
  bio: 'bio',
  avatarUrl: 'avatarUrl',
  isVerified: 'isVerified',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastLogin: 'lastLogin'
};

exports.Prisma.StoryScalarFieldEnum = {
  id: 'id',
  authorId: 'authorId',
  title: 'title',
  description: 'description',
  coverImageUrl: 'coverImageUrl',
  category: 'category',
  tags: 'tags',
  isPublished: 'isPublished',
  isFeatured: 'isFeatured',
  visibility: 'visibility',
  contentRating: 'contentRating',
  estimatedDuration: 'estimatedDuration',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  publishedAt: 'publishedAt'
};

exports.Prisma.ChapterScalarFieldEnum = {
  id: 'id',
  storyId: 'storyId',
  title: 'title',
  description: 'description',
  chapterOrder: 'chapterOrder',
  isPublished: 'isPublished',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NodeScalarFieldEnum = {
  id: 'id',
  storyId: 'storyId',
  chapterId: 'chapterId',
  nodeType: 'nodeType',
  title: 'title',
  content: 'content',
  position: 'position',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChoiceScalarFieldEnum = {
  id: 'id',
  fromNodeId: 'fromNodeId',
  toNodeId: 'toNodeId',
  choiceText: 'choiceText',
  conditions: 'conditions',
  effects: 'effects',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StoryVariableScalarFieldEnum = {
  id: 'id',
  storyId: 'storyId',
  variableName: 'variableName',
  variableType: 'variableType',
  defaultValue: 'defaultValue'
};

exports.Prisma.ItemScalarFieldEnum = {
  id: 'id',
  storyId: 'storyId',
  itemName: 'itemName',
  description: 'description',
  imageUrl: 'imageUrl'
};

exports.Prisma.PlaySessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  storyId: 'storyId',
  currentNodeId: 'currentNodeId',
  gameState: 'gameState',
  isCompleted: 'isCompleted',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  lastPlayedAt: 'lastPlayedAt'
};

exports.Prisma.ChoiceAnalyticsScalarFieldEnum = {
  id: 'id',
  choiceId: 'choiceId',
  sessionId: 'sessionId',
  selectedAt: 'selectedAt'
};

exports.Prisma.RatingScalarFieldEnum = {
  id: 'id',
  storyId: 'storyId',
  userId: 'userId',
  rating: 'rating',
  review: 'review',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  storyId: 'storyId',
  userId: 'userId',
  parentCommentId: 'parentCommentId',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserFollowScalarFieldEnum = {
  id: 'id',
  followerId: 'followerId',
  followingId: 'followingId',
  createdAt: 'createdAt'
};

exports.Prisma.StoryBookmarkScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  storyId: 'storyId',
  createdAt: 'createdAt'
};

exports.Prisma.AssetScalarFieldEnum = {
  id: 'id',
  fileName: 'fileName',
  fileUrl: 'fileUrl',
  fileType: 'fileType',
  fileSize: 'fileSize',
  uploadedBy: 'uploadedBy',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  Story: 'Story',
  Chapter: 'Chapter',
  Node: 'Node',
  Choice: 'Choice',
  StoryVariable: 'StoryVariable',
  Item: 'Item',
  PlaySession: 'PlaySession',
  ChoiceAnalytics: 'ChoiceAnalytics',
  Rating: 'Rating',
  Comment: 'Comment',
  UserFollow: 'UserFollow',
  StoryBookmark: 'StoryBookmark',
  Asset: 'Asset'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/vali/Apps/text-based/tests/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-1.1.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/vali/Apps/text-based/tests/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id           String    @id @default(uuid())\n  username     String    @unique @db.VarChar(50)\n  email        String    @unique @db.VarChar(255)\n  passwordHash String    @map(\"password_hash\") @db.VarChar(255)\n  displayName  String?   @map(\"display_name\") @db.VarChar(100)\n  bio          String?   @db.Text\n  avatarUrl    String?   @map(\"avatar_url\") @db.Text\n  isVerified   Boolean   @default(false) @map(\"is_verified\")\n  isActive     Boolean   @default(true) @map(\"is_active\")\n  createdAt    DateTime  @default(now()) @map(\"created_at\") @db.Timestamptz()\n  updatedAt    DateTime  @updatedAt @map(\"updated_at\") @db.Timestamptz()\n  lastLogin    DateTime? @map(\"last_login\") @db.Timestamptz()\n\n  // Relations\n  stories      Story[]\n  ratings      Rating[]\n  comments     Comment[]\n  playSessions PlaySession[]\n  followers    UserFollow[]    @relation(\"UserFollows\")\n  following    UserFollow[]    @relation(\"UserFollowing\")\n  bookmarks    StoryBookmark[]\n\n  @@map(\"users\")\n}\n\nmodel Story {\n  id                String    @id @default(uuid())\n  authorId          String    @map(\"author_id\")\n  author            User      @relation(fields: [authorId], references: [id], onDelete: Cascade)\n  title             String    @db.VarChar(255)\n  description       String?   @db.Text\n  coverImageUrl     String?   @map(\"cover_image_url\") @db.Text\n  category          String?   @db.VarChar(50)\n  tags              String[]  @db.Text\n  isPublished       Boolean   @default(false) @map(\"is_published\")\n  isFeatured        Boolean   @default(false) @map(\"is_featured\")\n  visibility        String    @default(\"public\") @db.VarChar(20)\n  contentRating     String    @default(\"general\") @map(\"content_rating\") @db.VarChar(10)\n  estimatedDuration Int?      @map(\"estimated_duration\")\n  createdAt         DateTime  @default(now()) @map(\"created_at\") @db.Timestamptz()\n  updatedAt         DateTime  @updatedAt @map(\"updated_at\") @db.Timestamptz()\n  publishedAt       DateTime? @map(\"published_at\") @db.Timestamptz()\n\n  // Relations\n  chapters     Chapter[]\n  nodes        Node[]\n  variables    StoryVariable[]\n  items        Item[]\n  ratings      Rating[]\n  comments     Comment[]\n  playSessions PlaySession[]\n  bookmarks    StoryBookmark[]\n\n  @@map(\"stories\")\n}\n\nmodel Chapter {\n  id           String   @id @default(uuid())\n  storyId      String   @map(\"story_id\")\n  story        Story    @relation(fields: [storyId], references: [id], onDelete: Cascade)\n  title        String   @db.VarChar(255)\n  description  String?  @db.Text\n  chapterOrder Int      @map(\"chapter_order\")\n  isPublished  Boolean  @default(false) @map(\"is_published\")\n  createdAt    DateTime @default(now()) @map(\"created_at\") @db.Timestamptz()\n  updatedAt    DateTime @updatedAt @map(\"updated_at\") @db.Timestamptz()\n\n  // Relations\n  nodes Node[]\n\n  @@unique([storyId, chapterOrder])\n  @@map(\"chapters\")\n}\n\nmodel Node {\n  id        String   @id @default(uuid())\n  storyId   String   @map(\"story_id\")\n  story     Story    @relation(fields: [storyId], references: [id], onDelete: Cascade)\n  chapterId String?  @map(\"chapter_id\")\n  chapter   Chapter? @relation(fields: [chapterId], references: [id], onDelete: Cascade)\n  nodeType  String   @default(\"story\") @map(\"node_type\") @db.VarChar(20)\n  title     String   @db.VarChar(255)\n  content   Json     @db.JsonB\n  position  Json     @db.JsonB\n  createdAt DateTime @default(now()) @map(\"created_at\") @db.Timestamptz()\n  updatedAt DateTime @updatedAt @map(\"updated_at\") @db.Timestamptz()\n\n  // Relations\n  fromChoices Choice[] @relation(\"ChoiceFrom\")\n  toChoices   Choice[] @relation(\"ChoiceTo\")\n\n  @@map(\"nodes\")\n}\n\nmodel Choice {\n  id         String   @id @default(uuid())\n  fromNodeId String   @map(\"from_node_id\")\n  fromNode   Node     @relation(\"ChoiceFrom\", fields: [fromNodeId], references: [id], onDelete: Cascade)\n  toNodeId   String   @map(\"to_node_id\")\n  toNode     Node     @relation(\"ChoiceTo\", fields: [toNodeId], references: [id], onDelete: Cascade)\n  choiceText String   @map(\"choice_text\") @db.Text\n  conditions Json?    @db.JsonB\n  effects    Json?    @db.JsonB\n  createdAt  DateTime @default(now()) @map(\"created_at\") @db.Timestamptz()\n  updatedAt  DateTime @updatedAt @map(\"updated_at\") @db.Timestamptz()\n\n  // Relations\n  analytics ChoiceAnalytics[]\n\n  @@map(\"choices\")\n}\n\nmodel StoryVariable {\n  id           String @id @default(uuid())\n  storyId      String @map(\"story_id\")\n  story        Story  @relation(fields: [storyId], references: [id], onDelete: Cascade)\n  variableName String @map(\"variable_name\") @db.VarChar(100)\n  variableType String @default(\"boolean\") @map(\"variable_type\") @db.VarChar(20)\n  defaultValue Json?  @map(\"default_value\") @db.JsonB\n\n  @@unique([storyId, variableName])\n  @@map(\"story_variables\")\n}\n\nmodel Item {\n  id          String  @id @default(uuid())\n  storyId     String  @map(\"story_id\")\n  story       Story   @relation(fields: [storyId], references: [id], onDelete: Cascade)\n  itemName    String  @map(\"item_name\") @db.VarChar(100)\n  description String? @db.Text\n  imageUrl    String? @map(\"image_url\") @db.Text\n\n  @@unique([storyId, itemName])\n  @@map(\"items\")\n}\n\nmodel PlaySession {\n  id            String    @id @default(uuid())\n  userId        String    @map(\"user_id\")\n  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  storyId       String    @map(\"story_id\")\n  story         Story     @relation(fields: [storyId], references: [id], onDelete: Cascade)\n  currentNodeId String?   @map(\"current_node_id\")\n  gameState     Json      @map(\"game_state\") @db.JsonB\n  isCompleted   Boolean   @default(false) @map(\"is_completed\")\n  startedAt     DateTime  @default(now()) @map(\"started_at\") @db.Timestamptz()\n  completedAt   DateTime? @map(\"completed_at\") @db.Timestamptz()\n  lastPlayedAt  DateTime  @updatedAt @map(\"last_played_at\") @db.Timestamptz()\n\n  // Relations\n  analytics ChoiceAnalytics[]\n\n  @@map(\"play_sessions\")\n}\n\nmodel ChoiceAnalytics {\n  id         String      @id @default(uuid())\n  choiceId   String      @map(\"choice_id\")\n  choice     Choice      @relation(fields: [choiceId], references: [id], onDelete: Cascade)\n  sessionId  String      @map(\"session_id\")\n  session    PlaySession @relation(fields: [sessionId], references: [id], onDelete: Cascade)\n  selectedAt DateTime    @default(now()) @map(\"selected_at\") @db.Timestamptz()\n\n  @@map(\"choice_analytics\")\n}\n\nmodel Rating {\n  id        String   @id @default(uuid())\n  storyId   String   @map(\"story_id\")\n  story     Story    @relation(fields: [storyId], references: [id], onDelete: Cascade)\n  userId    String   @map(\"user_id\")\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  rating    Int\n  review    String?  @db.Text\n  createdAt DateTime @default(now()) @map(\"created_at\") @db.Timestamptz()\n  updatedAt DateTime @updatedAt @map(\"updated_at\") @db.Timestamptz()\n\n  @@unique([storyId, userId])\n  @@map(\"ratings\")\n}\n\nmodel Comment {\n  id              String   @id @default(uuid())\n  storyId         String   @map(\"story_id\")\n  story           Story    @relation(fields: [storyId], references: [id], onDelete: Cascade)\n  userId          String   @map(\"user_id\")\n  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  parentCommentId String?  @map(\"parent_comment_id\")\n  parentComment   Comment? @relation(\"CommentReplies\", fields: [parentCommentId], references: [id], onDelete: Cascade)\n  content         String   @db.Text\n  createdAt       DateTime @default(now()) @map(\"created_at\") @db.Timestamptz()\n  updatedAt       DateTime @updatedAt @map(\"updated_at\") @db.Timestamptz()\n\n  // Relations\n  replies Comment[] @relation(\"CommentReplies\")\n\n  @@map(\"comments\")\n}\n\nmodel UserFollow {\n  id          String   @id @default(uuid())\n  followerId  String   @map(\"follower_id\")\n  follower    User     @relation(\"UserFollows\", fields: [followerId], references: [id], onDelete: Cascade)\n  followingId String   @map(\"following_id\")\n  following   User     @relation(\"UserFollowing\", fields: [followingId], references: [id], onDelete: Cascade)\n  createdAt   DateTime @default(now()) @map(\"created_at\") @db.Timestamptz()\n\n  @@unique([followerId, followingId])\n  @@map(\"user_follows\")\n}\n\nmodel StoryBookmark {\n  id        String   @id @default(uuid())\n  userId    String   @map(\"user_id\")\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  storyId   String   @map(\"story_id\")\n  story     Story    @relation(fields: [storyId], references: [id], onDelete: Cascade)\n  createdAt DateTime @default(now()) @map(\"created_at\") @db.Timestamptz()\n\n  @@unique([userId, storyId])\n  @@map(\"story_bookmarks\")\n}\n\nmodel Asset {\n  id         String   @id @default(uuid())\n  fileName   String   @map(\"file_name\") @db.VarChar(255)\n  fileUrl    String   @map(\"file_url\") @db.Text\n  fileType   String   @map(\"file_type\") @db.VarChar(50)\n  fileSize   Int      @map(\"file_size\")\n  uploadedBy String   @map(\"uploaded_by\")\n  createdAt  DateTime @default(now()) @map(\"created_at\") @db.Timestamptz()\n\n  @@map(\"assets\")\n}\n",
  "inlineSchemaHash": "bf945eb6fb0957441218c1b218e1f64d9bf95e6c221d575a59596b9c955cb07e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"display_name\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"avatar_url\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_verified\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_login\"},{\"name\":\"stories\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"StoryToUser\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"RatingToUser\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToUser\"},{\"name\":\"playSessions\",\"kind\":\"object\",\"type\":\"PlaySession\",\"relationName\":\"PlaySessionToUser\"},{\"name\":\"followers\",\"kind\":\"object\",\"type\":\"UserFollow\",\"relationName\":\"UserFollows\"},{\"name\":\"following\",\"kind\":\"object\",\"type\":\"UserFollow\",\"relationName\":\"UserFollowing\"},{\"name\":\"bookmarks\",\"kind\":\"object\",\"type\":\"StoryBookmark\",\"relationName\":\"StoryBookmarkToUser\"}],\"dbName\":\"users\"},\"Story\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"author_id\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StoryToUser\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coverImageUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"cover_image_url\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_published\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_featured\"},{\"name\":\"visibility\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contentRating\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"content_rating\"},{\"name\":\"estimatedDuration\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"estimated_duration\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"published_at\"},{\"name\":\"chapters\",\"kind\":\"object\",\"type\":\"Chapter\",\"relationName\":\"ChapterToStory\"},{\"name\":\"nodes\",\"kind\":\"object\",\"type\":\"Node\",\"relationName\":\"NodeToStory\"},{\"name\":\"variables\",\"kind\":\"object\",\"type\":\"StoryVariable\",\"relationName\":\"StoryToStoryVariable\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToStory\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"RatingToStory\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToStory\"},{\"name\":\"playSessions\",\"kind\":\"object\",\"type\":\"PlaySession\",\"relationName\":\"PlaySessionToStory\"},{\"name\":\"bookmarks\",\"kind\":\"object\",\"type\":\"StoryBookmark\",\"relationName\":\"StoryToStoryBookmark\"}],\"dbName\":\"stories\"},\"Chapter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"story_id\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"ChapterToStory\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chapterOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"chapter_order\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_published\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"nodes\",\"kind\":\"object\",\"type\":\"Node\",\"relationName\":\"ChapterToNode\"}],\"dbName\":\"chapters\"},\"Node\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"story_id\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"NodeToStory\"},{\"name\":\"chapterId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"chapter_id\"},{\"name\":\"chapter\",\"kind\":\"object\",\"type\":\"Chapter\",\"relationName\":\"ChapterToNode\"},{\"name\":\"nodeType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"node_type\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"fromChoices\",\"kind\":\"object\",\"type\":\"Choice\",\"relationName\":\"ChoiceFrom\"},{\"name\":\"toChoices\",\"kind\":\"object\",\"type\":\"Choice\",\"relationName\":\"ChoiceTo\"}],\"dbName\":\"nodes\"},\"Choice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromNodeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"from_node_id\"},{\"name\":\"fromNode\",\"kind\":\"object\",\"type\":\"Node\",\"relationName\":\"ChoiceFrom\"},{\"name\":\"toNodeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"to_node_id\"},{\"name\":\"toNode\",\"kind\":\"object\",\"type\":\"Node\",\"relationName\":\"ChoiceTo\"},{\"name\":\"choiceText\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"choice_text\"},{\"name\":\"conditions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"effects\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"analytics\",\"kind\":\"object\",\"type\":\"ChoiceAnalytics\",\"relationName\":\"ChoiceToChoiceAnalytics\"}],\"dbName\":\"choices\"},\"StoryVariable\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"story_id\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"StoryToStoryVariable\"},{\"name\":\"variableName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"variable_name\"},{\"name\":\"variableType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"variable_type\"},{\"name\":\"defaultValue\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"default_value\"}],\"dbName\":\"story_variables\"},\"Item\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"story_id\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"ItemToStory\"},{\"name\":\"itemName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"item_name\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"image_url\"}],\"dbName\":\"items\"},\"PlaySession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PlaySessionToUser\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"story_id\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"PlaySessionToStory\"},{\"name\":\"currentNodeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"current_node_id\"},{\"name\":\"gameState\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"game_state\"},{\"name\":\"isCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_completed\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"started_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"lastPlayedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_played_at\"},{\"name\":\"analytics\",\"kind\":\"object\",\"type\":\"ChoiceAnalytics\",\"relationName\":\"ChoiceAnalyticsToPlaySession\"}],\"dbName\":\"play_sessions\"},\"ChoiceAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"choiceId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"choice_id\"},{\"name\":\"choice\",\"kind\":\"object\",\"type\":\"Choice\",\"relationName\":\"ChoiceToChoiceAnalytics\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_id\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"PlaySession\",\"relationName\":\"ChoiceAnalyticsToPlaySession\"},{\"name\":\"selectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"selected_at\"}],\"dbName\":\"choice_analytics\"},\"Rating\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"story_id\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"RatingToStory\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RatingToUser\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"review\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"ratings\"},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"story_id\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"CommentToStory\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentToUser\"},{\"name\":\"parentCommentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"parent_comment_id\"},{\"name\":\"parentComment\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentReplies\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentReplies\"}],\"dbName\":\"comments\"},\"UserFollow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"followerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"follower_id\"},{\"name\":\"follower\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserFollows\"},{\"name\":\"followingId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"following_id\"},{\"name\":\"following\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserFollowing\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"user_follows\"},\"StoryBookmark\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StoryBookmarkToUser\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"story_id\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"StoryToStoryBookmark\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"story_bookmarks\"},\"Asset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_name\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_url\"},{\"name\":\"fileType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_type\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"file_size\"},{\"name\":\"uploadedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"uploaded_by\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"assets\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

