openapi: 3.1.0
info:
  title: Text-Based Adventure Platform - Auth API
  version: 1.0.0
servers:
  - url: https://api.textadventure.com/v1
paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, email, password]
              properties:
                username: { type: string }
                email: { type: string, format: email }
                password: { type: string, format: password }
                displayName: { type: string }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeUser'
        '409': { description: Conflict }
  /auth/login:
    post:
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [usernameOrEmail, password]
              properties:
                usernameOrEmail: { type: string }
                password: { type: string, format: password }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeAuth'
        '401': { description: Unauthorized }
  /auth/refresh:
    post:
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refreshToken]
              properties:
                refreshToken: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeTokens'
        '401': { description: Unauthorized }
  /auth/logout:
    post:
      summary: Logout and revoke refresh token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeNull'
  /auth/verify-email:
    post:
      summary: Verify email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [token]
              properties:
                token: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeUser'
  /auth/forgot-password:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email: { type: string, format: email }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeStatus'
  /auth/reset-password:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [token, newPassword]
              properties:
                token: { type: string }
                newPassword: { type: string, format: password }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeNull'
  /users/profile:
    get:
      summary: Get current user profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeUser'
    put:
      summary: Update current user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName: { type: string }
                bio: { type: string }
                avatar: { type: string }
                preferences: { type: object }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeUser'
components:
  schemas:
    EnvelopeUser:
      type: object
      properties:
        success: { type: boolean }
        message: { type: string }
        data:
          $ref: '#/components/schemas/User'
    EnvelopeAuth:
      type: object
      properties:
        success: { type: boolean }
        message: { type: string }
        data:
          type: object
          properties:
            accessToken: { type: string }
            refreshToken: { type: string }
            expiresIn: { type: integer }
            user: { $ref: '#/components/schemas/User' }
    EnvelopeTokens:
      type: object
      properties:
        success: { type: boolean }
        message: { type: string }
        data:
          type: object
          properties:
            accessToken: { type: string }
            refreshToken: { type: string }
            expiresIn: { type: integer }
    EnvelopeNull:
      type: object
      properties:
        success: { type: boolean }
        message: { type: string }
        data: { type: 'null' }
    EnvelopeStatus:
      type: object
      properties:
        success: { type: boolean }
        message: { type: string }
        data:
          type: object
          properties:
            status: { type: string }
    User:
      type: object
      properties:
        id: { type: string, format: uuid }
        username: { type: string }
        email: { type: string, format: email }
        displayName: { type: string }
        isVerified: { type: boolean }
        isActive: { type: boolean }
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }
