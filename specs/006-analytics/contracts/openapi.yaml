openapi: 3.1.0
info:
  title: Analytics API
  version: 0.1.0
  description: Event ingestion and author metrics
servers:
  - url: http://localhost:3000
paths:
  /analytics/events:
    post:
      summary: Ingest analytics event
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestEventDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_Ingested'
  /analytics/stories/{storyId}/metrics:
    get:
      summary: Get metrics for a story
      parameters:
        - in: path
          name: storyId
          required: true
          schema: { type: string }
        - in: query
          name: from
          required: false
          schema: { type: string, format: date-time }
        - in: query
          name: to
          required: false
          schema: { type: string, format: date-time }
      security: [{ bearerAuth: [] }]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse_Metrics'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApiEnvelope:
      type: object
      properties:
        success: { type: boolean }
        message: { type: string }
      required: [success, message]
    IngestEventDto:
      type: object
      properties:
        sessionId: { type: string }
        type: { type: string, enum: ['start','visit','choice','end'] }
        payload: { type: object, additionalProperties: {} }
      required: [sessionId, type]
    Metrics:
      type: object
      properties:
        plays: { type: integer }
        completions: { type: integer }
        completionRate: { type: number }
        dropOffByNode:
          type: array
          items:
            type: object
            properties:
              nodeId: { type: string }
              count: { type: integer }
            required: [nodeId, count]
        choiceDistribution:
          type: array
          items:
            type: object
            properties:
              choiceId: { type: string }
              count: { type: integer }
            required: [choiceId, count]
      required: [plays, completions, completionRate]
    ApiResponse_Ingested:
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            data:
              type: object
              properties:
                id: { type: string }
              required: [id]
          required: [data]
    ApiResponse_Metrics:
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            data: { $ref: '#/components/schemas/Metrics' }
          required: [data]
